/* В листинге 6.10 показано, как с помощью switch и break реализовать простое меню. 
Для отображения возможных вариантов выбора в программе применяется функция showmenu(). 
Затем оператор switch выбирает действие на основе выбора пользователя. 
На заметку! В некоторых комбинациях оборудования и операционной системы управляющая последовательность \а (см. case 1 в листинге 6.10) не генерирует звуковой сигнал. 
Листинг 6.10. switch.cрр */
// switch.cрр — использование оператора switch 
#include <iostream>
using namespace std;
void showmenu(); // прототипы функций 
void report();
void comfort();
int main(void)
{
    showmenu();
    int choice;
    cin >> choice;
    while(choice != 5)
    {
        switch(choice)
        {
            case 1 : cout << "\a\n";
            break;
            case 2 : report();
            break;
            case 3 : cout << "The boss was in all day.\n";
            break;
            case 4 : comfort();
            break;
            default : cout << "That's not a choice.\n";
        }
        showmenu();
        cin >> choice;
    }
    cout << "Bye!\n";
    return 0;
}
void showmenu()
{
    cout << "Please enter 1, 2, 3, 4, or 5:\n"
            "1) alarm       2) report\n"
            "3) alibi       4) comfort\n"
            "5) quit\n";
}
void report()
{
    cout << "It's been an excellent week for business.\n"
            "Sales are up 120%. Expenses are down 35%.\n";
}
void comfort()
{
    cout << "Your employees think you are the finest CEO\n"
            "in the industry. The board of directors think\n"
            "you are the finest CEO in the industry.\n";
}
/*
Цикл while завершается, когда пользователь вводит 5. Ввод от 1 до 4 активизирует соответствующий выбор из списка switch, а ввод значения 6 вызывает действие по умолчанию. 
Обратите внимание, что для корректной работы программы вводиться должно целочисленное значение. 
Если, например, ввести букву, оператор ввода даст сбой, а цикл будет выполняться бесконечно вплоть до уничтожения программы. 
В таком случае лучше использовать символьный ввод. 
Как отмечалось ранее, этой программе необходимы операторы break, чтобы ограничить выполнение определенной частью оператора switch. 
Вы можете удостовериться, что это именно так, удалив операторы break из листинга 6.10 и посмотрев, как программа будет работать без них. 
Например, вы обнаружите, что ввод 2 заставит программу выполнить все операторы, ассоциированные с метками 2, 3, 4 и default. 
C++ ведет себя подобным образом, потому что такое поведение иногда может быть полезным. 
Так, за счет этого можно легко использовать множественные метки. 
Например, предположим, что вы перепишете листинг 6.10, используя в качестве выборов меню и меток case символы вместо целых значений. 
*/