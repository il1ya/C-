/*
Язык C++ унаследовал от С удобный пакет функций для работы с символами, прототипы которых находятся в заголовочном файле cctype (или ctype.h в старом 
стиле), и это упрощает решение таких задач, как выяснение того, является символ символом верхнего регистра, десятичной цифрой или знаком препинания. 
Например, функция isaplha (ch) возвращает ненулевое значение, если ch —  буква, и ноль — в противоположном случае. 
Аналогично, ispunct (ch) возвращает значение true, только если ch — знак препинания, такой как запятая или точка. 
(Эти функции возвращают значение типа int, анеЬооІ, но int очень легко преобразуется в bool.) 
Использовать эти функции намного удобнее, чем операции "И" и "ИЛИ".  
Например, вот как пришлось бы с помощью "И" и "ИЛИ" проверять, что ch является буквенным символом: 
if ( (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z') ) 
Сравните это с применением функции isalpha (): if (isalpha(ch)) 
Однако преимущество заключается не только в том, что isalpha () легче использовать. 
Форма с операциями "И"/"ИЛИ" предполагает, что коды символов, находящихся в пределах A-Z, составляют последовательность, в которую не входят какие-либо другие символы. 
Это предположение верно для кодировки ASCII, но не всегда правильно в общем случае. 
В листинге 6.8 демонстрируется применение некоторых функций из семейства cctype. 
В частности, в нем используется функция isalpha (), проверяющая буквенные символы, isdigits(), проверяющая символы десятичных цифр, таких как 3, 
isspace (), проверяющая пробельные символы, такие как пробелы, символы новой строки и табуляции, и ispunct (), проверяющая знаки препинания. 
Программа также предлагает повторный обзор структуры if else if и цикла while сcin.get(char). 
Листинг 6.8. cctypes.cpp 
*/
// cctypes.cpp — использование библиотеки ctype.h 
#include <iostream>
#include <cctype>  // прототипы символьных функций 
int main(void)
{
    using namespace std;
    cout << "Enter text for analysis, and type @"
    "  to terminate input.\n";  // запрос текста для анализа; завершающий символ - @ 
    char ch;
    int whitespace = 0;
    int digits = 0;
    int chars = 0;
    int punct = 0;
    int others = 0;
    cin.get(ch);     // получение первого символа 
    while(ch != '@') // проверка на признак окончания ввода 
    {
        if(isalpha(ch))  // буквенный символ? 
        chars++;
        else if(isspace(ch)) // пробельный символ? 
        whitespace++;
        else if(isdigit(ch)) // десятичная цифра? 
        digits++;
        else if(ispunct(ch)) // знак препинания? 
        punct++;
        else
        others++;
        cin.get(ch); // получение следующего символа 
    }
    cout << chars << " letters, " << whitespace << " whitespace, " << digits << " digits, " << punct << " punctuations, " << others << " others.\n"; // вывод количества букв, пробелов, цифр, 
                                   // знаков препинания и прочих символов 
        return 0;
}