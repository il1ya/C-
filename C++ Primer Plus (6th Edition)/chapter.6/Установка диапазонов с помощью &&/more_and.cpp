/* Операция && также позволяет установить последовательность операторов if else if else, где каждый выбор соответствует определенному диапазону значений. 
В листинге 6.6 иллюстрируется такой подход. В нем также демонстрируется полезная техника обработки серии сообщений. 
Точно так же, как переменная-указатель на char может идентифицировать целую строку, указывая на ее начало, массив указателей на char может идентифицировать серию строк. 
Вы просто присваиваете адрес каждой строки различным элементам массива. Код в листинге 6.6 использует массив qualify для хранения адресов четырех строк. 
Например, qualify [1] содержит адрес строки "mud tug-of-war\n".
Программа затем может использовать qualify [1] как любой другой указатель на строку — например, вместе с cout либо при вызове strlen() или stremp(). 
Применение квалификатора const защищает эти строки от непреднамеренных изменений. 
Листинг 6.6. more_and.cрр */
// more_and.ерр -- использование логической операции "И" 
#include <iostream>
const char *qualify[4] = // массив указателей на строки 
{
        "10,000-meter race.\n"      // забег на 10 000 метров 
        "mud tug-of-war.\n"         // перетягивание каната в грязи 
        "mastres canoe jiusting.\n" // состязания мастеров каноэ 
        "pie-throwing festival.\n"  // фестиваль по бросанию пирожков 
};
int main(void)
{
    using namespace std;
    int age;
    cout << "Enter your age in years: "; // запрос возраста в годах 
    cin >> age;
    int index;
    if(age > 17 && age < 35)
        index = 0;
        else if(age >= 35 && age < 50)
        index = 1;
        else if(age >= 50 && age < 65)
        index = 2;
        else
        index = 3;
        cout << "You qualify for the " << qualify[index]; // вывод рекомендованного результата 
        return 0;
}
/*
Введенный возраст не соответствует ни одному из проверяемых диапазонов, поэтому программа присваивает index значение 3 и затем печатает соответствующую строку. 
Замечания по программе 
В листинге 6.6 выражение age > 17 && age < 35 проверяет возраст на предмет попадания в диапазон между двумя значениями, т.е. он должен быть от 18 до 34 лет включительно. 
Выражение age >= 35 && age < 50 использует операцию >= для включения в диапазон 35, т.е. представляет диапазон возрастов от 35 до 49 включительно. 
Если бы в программе применялось выражение age > 35 && age < 50, то значение 35 было бы потеряно для всех проверок. 
Организуя проверки диапазонов, вы должны следить, чтобы диапазоны не имели промежутков между собой, а также не перекрывались. 
К тому же следует удостовериться в том, что диапазоны заданы корректно; см. врезку "Проверка диапазонов" ниже. 
Оператор if else служит для выбора индекса массива, который, в свою очередь, идентифицирует определенную строку. 
*/