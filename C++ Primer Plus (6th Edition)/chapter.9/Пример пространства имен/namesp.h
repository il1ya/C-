/*
Рассмотрим пример многофайловой программы, демонстрирующей некоторые возможности пространства имен. 
Первый файл (листинг 9.11) является заголовочным и содержит типичные для таких файлов элементы — константы, определения структур и прототипы функций. 
В этом случае элементы помещены в два пространства имен. 
Первое пространство имен, pers, содержит определение структуры Person, а также прототипы функции, которая помещает в структуру имя некоторого лица, и функции, отображающей содержимое структуры. 
Второе пространство имен, debts, определяет структуру для хранения имени лица и суммы его задолженности. 
Эта структура использует структуру Person, поэтому пространство имен debts содержит директиву using, которая делает имена пространства pers доступными в debts. 
Пространство имен debts также содержит ряд прототипов. 
Листинг 9.11. namesp.h */
// namesp.h 
#include <string>
// Создание пространств имен pers и debts 
namespace pers
{
    struct Person
    {
        std::string fname;
        std::string lname;
    };
    void getPerson(Person &);
    void showPerson(const Person &);
}
namespace debts
{
    using namespace pers;
    struct Debt
    {
        Person name;
        double amount;
    };
    void getDebt(Debt &);
    void showDebt(const Debt &);
    double sumDebts(const Debt ar[], int n);
}