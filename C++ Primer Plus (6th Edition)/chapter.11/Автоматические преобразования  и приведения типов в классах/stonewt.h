/*
Если определяемый класс в достаточной мере связан с базовым типом или другим классом, преобразование одного в другой имеет смысл. 
В этом случае можно указать C++, как выполнять преобразование автоматически либо, возможно, через приведение типа. 
Чтобы посмотреть, как это работает, перепишем программу преобразования стоунов в фунты из главы 3 с использованием класса. 
Сначала необходимо спроектировать подходящий тип. По существу нужно представить одно и то же понятие (вес) двумя способами (в фунтах и стоунах). 
Класс предлагает отличный способ включить два представления одной концепции в одну сущность. 
Таким образом, имеет смысл поместить оба представления веса в один класс и затем предусмотреть методы для выражения веса в различной форме. 
В листинге 11.16 показан заголовок этого класса. 
Листинг 11.16. stonewt.h */
// stonewt.h — определение класса Stonewt 

#ifndef STONEWT_H_
#define STONEWT_H_
class Stonewt
{
    private:
        enum { Lbs_per_stn = 14};   // фунтов на стоун 
        int stone;                  // полных стоунов 
        double pds_left;            // дробное число фунтов
        double pounds;              // общий вес в фунтах
    public:
        Stonewt(double lbs);            // конструктор для значения в фунтах 
        Stonewt(int stn, double lbs);   // конструктор для значения в стоунах и фунтах 
        Stonewt();                      // конструктор по умолчанию 
        ~Stonewt();
        void show_lbs() const;          // отображение веса в формате фунтов 
        void show_stn() const;          // отображение веса в формате стоунов 
};
#endif
/*
Как упоминалось в главе 10, enum предоставляет удобный способ определения специфичных для класса констант, при условии, что они будут целочисленными. 
Можно также воспользоваться следующей альтернативой: 
static const int Lbs_per_stn =14; 
Обратите внимание, что класс Stonewt имеет три конструктора. 
Они позволяют инициализировать объект Stonewt числом с плавающей точкой для фунтов или комбинацией стоунов и фунтов. 
Либо же можно создать объект Stonewt без его инициализации: 
Stonewt blossem(132.5);     // вес составляет 132.5 фунта 
Stonewt buttercup(10, 2);   // вес составляет 10 стоунов, 2 фунта 
Stonewt bubbles;            // вес равен значению по умолчанию 
Этот класс в действительности не нуждается в объявлении деструктора,  поскольку автоматически определяемого деструктора по умолчанию в данном случае вполне достаточно. 
С другой стороны, предоставление явного объявления упростит определение деструктора в будущем, когда это понадобится. 
*/
