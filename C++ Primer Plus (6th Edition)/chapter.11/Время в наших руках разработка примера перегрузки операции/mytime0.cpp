// Листинг 11.2. mytimeO.срр 
// mytimeO.cpp -- реализация методов Time 
#include <iostream>
#include "mytime0.h"
Time::Time()
{
    hours = minutes = 0;
}

Time::Time(int h, int m)
{
    hours = h;
    minutes = m;
}
void Time::AddMin(int m)
{
    minutes += m;
    hours += minutes / 60;
    minutes %= 60;
}
void Time::AddHr(int h)
{
    hours += h;
}
void Time::Reset(int h, int m)
{
    hours = h;
    minutes = m;
}
Time Time::Sum(const Time &t) const 
{
    Time sum;
    sum.minutes = minutes + t.minutes;
    sum.hours = hours + t.hours + sum.minutes / 60;
    sum.minutes %= 60;
    return sum;
}
void Time::Show() const
{
    std::cout << hours << " hours, " << minutes << " minutes";
}
/*
Рассмотрим код функции Sum (). Обратите внимание, что аргумент является ссылкой, но возвращаемый тип — нет. 
Причина передачи аргумента по ссылке кроется в эффективности. 
Код будет давать те же самые результаты и при передаче объекта Time по значению, но с точки зрения использования памяти обычно быстрее и эффективнее передавать по ссылке. 
Однако возвращаемое значение не может быть ссылкой. Это объясняется тем, что функция создает новый объект Time (по имени sum), который представляет сумму двух других объектов Time. 
Возврат объекта приводит к созданию копии объекта, которую может использовать вызывающая функция. 
Однако если возвращаемым типом является Тime &, ссылка будет указывать на сам объект surn. 
Но объект sum — это локальная переменная, которая уничтожается при завершении работы функции, поэтому ссылка указывает на несуществующий объект. 
Использование типа возврата Time означает, что программа создает копию объекта sum перед его уничтожением, и вызывающая функция получает корректный результат. 
*/