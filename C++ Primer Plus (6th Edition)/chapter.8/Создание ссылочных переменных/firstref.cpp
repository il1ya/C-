/* Как уже упоминалось, в языках С и C++ символ & используется для обозначения адреса переменной. 
Язык C++ придает символу & дополнительный смысл и задействует его для объявления ссылок. 
Например, чтобы rodents стало альтернативным именем для переменной rats, необходимо написать следующее: 
int rats; 
int & rodents = rats; // rodents становится псевдонимом имени rats 
В таком контексте символ & не является операцией взятия адреса. В этом случае & воспринимается как часть идентификатора типа данных. 
Подобно тому, как выражение char * в объявлении означает указатель на char, выражение int & представляет собой ссылку на int. 
Объявление ссылки позволяет взаимозаменяемо использовать идентификаторы rats и rodents. 
Они ссылаются на одно и то же значение, а также на один и тот же адрес памяти. 
Программа, представленная в листинге 8.2, подтверждает сказанное. 
Листинг 8.2. f irstref. срр */
// firstref.cpp — определение и использование ссылки 
#include <iostream>
int main(void)
{
    using namespace std;
    int rats = 101;
    int & rodents = rats; // rodents является ссылкой 
    cout << "rats = " << rats;
    cout << ", rodents = " << rodents << endl;
    rodents++;
    cout << "rats = " << rats;
    cout << ", rodents = " << rodents << endl;
    // Некоторые реализации требуют для следующих адресов 
    // выполнить приведение к типу unsigned 
    cout << "rats address = " << &rats;
    cout << ", rodents address = " << &rodents << endl;
    return 0;
}
/*
Обратите внимание, что символ & в следующем операторе не является операцией взятия адреса, а объявляет, что переменная rodents имеет тип int & 
(т.е. является ссылкой на переменную типа int): 
int & rodents = rats; 
Однако в приведенном ниже операторе символ & является операцией взятия  адреса, т.е. & rodents представляет собой адрес переменной, на которую ссылается rodents: 
cout << ", rodents address = " << Srodents « endl; 
*/