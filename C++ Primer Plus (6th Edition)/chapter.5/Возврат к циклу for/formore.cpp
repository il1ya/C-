/* Давайте попробуем сделать что-то более сложное с помощью цикла. Код в листинге 5.4 использует цикл для вычисления и сохранения первых 16 факториалов. 
Факториалы, которые являются удобным примером автоматизации обработки, вычисляются следующим образом. Ноль факториал, записываемый как 0!, определен как равный 1. 
Далее, 1! равен 1*0!, т.е. 1. 2! равно 2*1!, или 2. 3! равно 3*2!, или 6, и т.д. 
То есть факториал каждого целого числа равен произведению этого числа на факториал предыдущего числа. 
В программе один цикл используется для вычисления значений последовательных факториалов, с сохранением их в массиве. 
Второй цикл служит для отображения результатов. Также программа демонстрирует применение внешних объявлений для значений. 
Листинг 5.4. formore. срр */
// formore.срр — дополнительные сведения о циклах for 
#include <iostream>
const int ArSize = 16;  // пример внешнего объявления 
int main(void)
{
    long long factorials[ArSize];
    factorials[1] = factorials[0] = 1LL; 
    int i;
    for(i = 2; i < ArSize; i++)
        factorials[i] = i * factorials[i -1];

    for(i = 0; i < ArSize; i++)
        std::cout << i << "! = " << factorials[i] << std::endl;
    return 0;
}