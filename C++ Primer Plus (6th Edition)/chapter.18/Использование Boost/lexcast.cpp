/*
Несмотря на то что многие библиотеки Boost стали доступны как часть стандарта С++11, есть еще много дополнительных библиотек Boost, которые имеет смысл исследовать. 
Например, lexicalcast из библиотеки Conversion предоставляет простые преобразования между числовыми и строковыми типами. Синтаксис указывается  
после dynamic_cast, где предоставляется целевой тип как параметр шаблона. В листинге 18.11 показан простой пример. 
Листинг 18.11. lexcast.cpp */
// lexcast.cpp -- простое преобразование из float в string 
#include <iostream>
#include <string>
#include "boost/lexical_cast.hpp"
int main()
{
    using namespace std;
    cout << "Enter your weight: ";              // запрос на ввод веса 
    float weight;
    cin >> weight;
    string gain = "A 10% increase raises ";     // увеличение веса на 10% и вывод результата 
    string wt = boost::lexical_cast<string>(weight);
    gain = gain + wt + " to ";                  // operator* () для строки 
    weight = 1.1 * weight;  
    gain = gain + boost::lexical_cast<string>(weight) + ".";
    cout << gain << endl;
    return 0;
}
/*
Результаты двух запусков программы из листинга 18.11 выглядят следующим образом: 
Enter your weight: 150 
А 10% increase raises 150 to 165. 
Enter your weight: 156 
A 10% increase raises 156 to 171.600006. 
Во втором запуске демонстрируется одно из ограничений шаблона lexicalcast; он не обеспечивает должный контроль над форматированием чисел с плавающей точкой. 
Для этого придется воспользоваться средствами внутреннего форматирования, которые рассматривались в главе 17. 
Шаблон lexical_cast можно также применять для преобразования строк в числовые значения. 
Очевидно, что проект Boost содержит намного больше, чем описано здесь. 
Например, библиотека Any позволяет сохранять (и восстанавливать) неоднородную коллекцию значений и объектов разных типов в контейнере STL, используя шаблон 
Any в качестве оболочки для различных типов. 
Библиотека Boost Math расширяет список математических функций далеко за пределы стандартной математической библиотеки. 
Библиотека Boost Filesystem упрощает написание кода, который является переносимым между платформами с разными файловыми системами. 
Для получения дополнительных сведений о содержимом этой библиотеки и о том, как ее добавлять к разным платформам, обращайтесь на веб-сайт Boost (www.boost.org). 
Кроме того, некоторые реализации C++, например, от Cygwin, включают библиотеку Boost. 
*/