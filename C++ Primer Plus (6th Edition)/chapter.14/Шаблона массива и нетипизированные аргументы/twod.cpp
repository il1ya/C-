/*
Рекурсивное использование шаблонов 
Другим примером универсальности шаблонов является возможность рекурсивного использования шаблонов. Например, приведенное ранее определение шаблона массива можно использовать так: 

ArrayTP<ArrayTP<int,5>, 10> twodee; 

Здесь создается массив twodee, состоящий из 10 элементов, каждый из которых, в свою очередь, является массивом из пяти целых чисел (int). 
Эквивалентный обычный массив объявляется следующим образом: 

int twodee[10][5]; 

Обратите внимание, что в синтаксисе шаблона размеры массива приведены в порядке, отличном от эквивалентного обычного двумерного массива. 
Эта идея проверяется в листинге 14.18. Также в нем для создания одномерного массива, содержащего суммы и средние значения для каждого из десяти наборов по пять чисел, применяется шаблон АггауТР. 
Вызов метода cout.width(2) приводит к выводу следующего элемента массива в виде двух символов (если для вывода целого числа не потребуется большая длина). 
Листинг 14.18. twod.cpp */
// twod.cpp — создание двумерного массива 
#include <iostream>
#include "arraytp.h"
int main(void)
{
    using std::cout;
    using std::endl;

    ArrayTP<int, 10> sums;
    ArrayTP<double, 10> aves;
    ArrayTP<ArrayTP<int, 5>, 10> twodee;

    int i, j;
    for(i = 0; i < 10; i++)
    {
        sums[i] = 0;
        for(j = 0; j < 5; j++)
        {
            twodee[i][j] = (i + 1) * (j + 1);
            sums[i] += twodee[i][j];
        }
        aves[i] = (double) sums[i] / 10;
    }
    for(i = 0; i < 10; i++)
    {
        for(j = 0; j < 5; j++)
        {
            cout.width(2);
            cout << twodee[i][j] << ' ';
        }
        cout << ": sum = ";
        cout.width(3);
        cout << sums[i] << ", average = " << aves[i] << endl;
    }
    cout << "Done.\n";
    return 0;
}
