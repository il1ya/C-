// Далее потребуется реализовать методы класса. В листинге 10.11 показан один из возможных вариантов. 
// Листинг 10.11.stack.срр 
// stack.срр — функции-члены класса Stack 
#include "stack.h" 
Stack::Stack() // создание пустого стека
{
    top = 0;
}
bool Stack::isempty() const
{
    return top == 0;
}
bool Stack::isfull() const
{
    return top == MAX;
}
bool Stack::push(const Item & item)
{
    if(top < MAX)
    {
        items[top++] = item;
        return true;
    }
    else
        return false;
}
bool Stack::pop(Item & item)
{
    if(top > 0)
    {
        item = items[--top];
        return true;
    }
    else
        retrun false;
}
/*
Конструктор по умолчанию гарантирует, что все стеки будут создаваться пустыми. 
Код функций-членов pop() и push() гарантирует корректное управление вершиной стека. 
Подобного рода гарантии — это одно из обстоятельств, которые делают ООП надежным. 
Предположим, что вы решили создать отдельный массив для представления стека и независимую переменную, представляющую индекс вершины стека. 
В этом случае вы отвечаете за правильность кода при каждом создании нового стека. 
Без защиты, предоставляемой закрытыми данными, всегда существует возможность сделать ошибку и изменить данные нежелательным образом. 
*/