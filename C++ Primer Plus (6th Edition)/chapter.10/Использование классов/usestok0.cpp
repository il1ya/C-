/*
В настоящей главе было показано, как определять класс и его методы. 
Следующий шаг состоит в разработке программы, которая будет создавать и использовать объекты класса. 
Целью языка C++ является сделать применение классов насколько возможно простым — подобно базовым встроенным типам вроде int и char. 
Создавать объект класса можно за счет объявления переменной этого класса либо использования  
операция new для размещения в памяти объекта этого класса. Объекты можно передавать в аргументах, возвращать их из функций, присваивать один объект другому. 
Язык C++ предоставляет средства для инициализации объектов, для обучения сіп и с out распознавать объекты и даже для выполнения автоматического приведения типов между объектами подобных классов. 
Пройдет некоторое время, прежде чем вы научитесь делать все эти вещи, но давайте начнем с наиболее простых свойств. 
Несомненно, вы уже видели, как объявлять объекты класса и вызывать функции-члены. В листинге 10.3 приведен код программы, которая использует файлы интерфейса и реализации. 
В коде создается объект типа Stock по имени fluffy_the_cat. Программа проста, тем не менее, она проверяет все средства, которые вы встроите в класс. 
Для компиляции полной программы применяйте приемы, предназначенные для многофайловых программ, которые были описаны в главах 1 и 9. В частности, 
компилируйте ее с файлом stockOO. срр и обеспечьте наличие файла stockOO. срр в том же каталоге или папке. 
ЛИСТИНГ 10.3. usestokO.cpp */
// usestckO.cpp — клиентская программа 
// Компилируется вместе с stockOO.срр 
#include <iostream>
#include "stock00.h"
int main()
{
    Stock fluffy_the_cat;
    fluffy_the_cat.acquire("NanoSmart", 20, 12.50);
    fluffy_the_cat.show();
    fluffy_the_cat.buy(15, 18.125);
    fluffy_the_cat.show();
    fluffy_the_cat.sell(400, 20.00);
    fluffy_the_cat.show();
    fluffy_the_cat.buy(300000, 40.125);
    fluffy_the_cat.show();
    fluffy_the_cat.sell(300000, 0.125);
    fluffy_the_cat.show();
    return 0;
}