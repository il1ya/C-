/* Два наиболее распространенных метода помещения строки в массив заключаются в инициализации массива строковой константой и чтением из клавиатурного или файлового ввода в массив. 
В листинге 4.2 эти подходы демонстрируются за счет инициализации одного массива строкой в двойных кавычках и использования сin для помещения вводимой строки в другой массив. 
В программе также применяется стандартная библиотечная функция stlen() для получения длины строки. 
Стандартный заголовочный файл cstring (или string.h в более старых реализациях) предоставляет объявления для этой и многих других функций, работающих со строками. */
// Листинг 4.2. strings.срр 
// strings.срр -- сохранение строк в массиве 
#include <iostream>
#include <cstring>  // для функции strlen() 
int main(void)
{
    using namespace std;
    const int Size = 15;
    char name1[Size];  // пустой 
    char name2[Size] = "C++owboy";  // инициализация массива 
    // ПРИМЕЧАНИЕ: некоторые реализации могут потребовать 
    // ключевого слова static для инициализации массива name2
    cout << "Howdy! I'm " << name2;
    cout << "! What's your name?\n";
    cin >> name1;
    cout << "Well, " << name1 << ", your name has ";
    cout << strlen(name1) << " letters and is stored\n";
    cout << "in an array of " << sizeof(name1) << " bytes.\n";
    cout << "Your initial is " << name1[0] << ".\n";
    name2[3] = '\0'; // установка нулевого символа
    cout << "Here are the first 3 characters of my name: ";
    cout << name2 << endl;
    return 0; 
}