/* Новая стратегия хранения данных изменяет трактовку местоположения как именованной величины, а значения — как производной величины. 
Для этого предусмотрен специальный тип переменной — указатель, который может хранить адрес значения. 
Таким образом, имя указателя представляет местоположение. Применяя операцию *, называемую косвенным значением или операцией разыменования, можно получить значение, хранящееся в указанном месте. 
(Да, это тот же символ *, который применяется 
для обозначения арифметической операции умножения; C++ использует контекст для определения того, что подразумевается в каждом конкретном случае — умножение или разыменование.) 
Предположим, например, что manly — это указатель. В таком случае manly представляет адрес, a *manly — значение, находящееся по этому адресу. 
Комбинация *manly становится эквивалентом простой переменной типа int. Эти идеи демонстрируются в листинге 4.15. Также там показано, как объявляется указатель. 
Листинг 4.15. pointer. cрр */
// pointer.cрр -- наша первая переменная-указатель 
#include <iostream>
int main(void)
{
    using namespace std;
    int updates = 6;  // объявление переменной 
    int *p_updates;   // объявление указателя на int 

    p_updates = &updates;  // присвоить адрес int указателю 
    // Выразить значения двумя способами 
    cout << "Values: updates = " << updates;
    cout << ", *p_updates = " << *p_updates << endl;
    // Выразить адреса двумя способами 
    cout << "Addresses: &updates = " << &updates;
    cout << ", p_updates = " << p_updates << endl;
    // Изменить значение через указатель 
    *p_updates = *p_updates + 1;
    cout << "Now updates = " << updates << endl;
    return 0;
}