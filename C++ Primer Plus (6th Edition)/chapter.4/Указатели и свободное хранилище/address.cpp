/* В начале главы 3 упоминалось о трех фундаментальных свойствах, которые должна отслеживать компьютерная программа, когда она сохраняет данные. 
Напомним их: 
• где хранится информация; 
• какое значение сохранено; 
• разновидность сохраненной информации. 
Пока что вы использовали только одну стратегию: объявление простых переменных. В операторе объявления предоставляется тип и символическое имя значения. 
Он также заставляет программу выделить память для этого значения и внутренне отслеживать ее местоположение. 

Давайте рассмотрим другую стратегию, важность которой проявляется при разработке классов C++. 
Эта стратегия основана на указателях, которые представляют собой переменные, хранящие адреса значений вместо самих значений. 
Но прежде чем обратиться к указателям, давайте поговорим о том, как явно получить адрес обычной переменной. 
Для этого применяется операция взятия адреса, обозначаемая символом &, к переменной, адрес которой интересует. Например, если home — переменная, то &home — ее адрес. 
В листинге 4.14 демонстрируется использование этой операции. 
*/
// Листинг 4.14. address.срр 
// address.срр -- использование операции & для нахождения адреса 
#include <iostream>
int main(void)
{
    using namespace std;
    int donuts = 6;
    double cups = 4.5;

    cout << "donuts value = " << donuts;
    cout << " and donuts address = " << &donuts << endl;
    // ПРИМЕЧАНИЕ: может понадобиться использовать 
    // unsigned (Sdonuts) и unsigned (&cups) 
    cout << "cups value = " << cups;
    cout << " and cups address = " << &cups << endl;
    return 0;
}