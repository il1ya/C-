/* Родство указателей и имен массивов происходит из арифметики указателей, а также того, как язык C++ внутренне работает с массивами. 
Сначала рассмотрим арифметику указателей. Добавление единицы к целочисленной переменной увеличивает ее  
значение на единицу, но добавление единицы к переменной типа указателя увеличивает ее значение на количество байт, составляющих размер типа, на который она указывает. 
Добавление единицы к указателю на double добавляет 8 байт к числовой величине указателя на системах с 8-байтным double, 
в то время как добавление единицы к указателю на short добавляет к его значению 2 байта. 
Код в листинге 4.19 доказывает истинность этого утверждения. Он также демонстрирует еще один важный момент: 
C++ интерпретирует имена массивов как адреса. 
Листинг 4.19. addpntrs.cрр */
// addpntrs.cрр -- сложение указателей 
#include <iostream>
int main(void)
{
    using namespace std;
    double wages[3] = { 10000.0, 20000.0, 30000.0 };
    short stacks[3] = { 3, 2, 1 };

    // Два способа получить адрес массива 
    double *pw = wages; // имя массива равно адресу 
    short *ps = &stacks[0]; // либо использование операции взятия адреса с элементом массива 

    cout << "pw = " << pw << ", *pw = " << *pw << endl; // pw и *pw. Первое из них представляет адрес, а второе — значение, расположенное по этому адресу. 
    pw = pw + 1;
    cout << "add i to the pw pointer:\n"; // добавление 1 к указателю pw 
    cout << "pw = " << pw << ", *pw = " << *pw << "\n\n";
    cout << "ps = " << ps << ", *ps = " << *ps << endl;
    ps = ps + 1;
    cout << "add i to the ps pointer:\n"; // добавление 1 к указателю ps 
    cout << "ps = " << ps << ", *ps = " << *ps << "\n\n";

    // Доступ к двум элементам с помощью нотации массивов 
    cout << "access two elements with array notation\n";
    cout << "stacks[0] = " << stacks[0] << ", stacks[1] = " << stacks[1] << endl;

    // Доступ к двум элементам с помощью нотации указателей 
    cout << "access two elements with pointer notation\n";
    cout << "*stacks = " << *stacks << ", *(stacks + 1) = " << *(stacks + 1) << endl;

    cout << sizeof(wages) << " = size of wages array\n"; // размер массива wages 
    cout << sizeof(pw) << " = size of pw pointer\n";    // размер указателя pw 
    return 0;

}