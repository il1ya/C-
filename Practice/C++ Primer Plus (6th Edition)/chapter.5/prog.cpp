1. В чем состоит разница между циклами с проверкой на входе и циклами с проверкой на выходе? Какой из циклов C++ к какой категории относится?  
1. Цикл с проверкой на входе оценивает проверочное выражение до входа в тело цикла. 
Если условие изначально равно false, то тело цикла никогда не выполнится. Цикл с проверкой на выходе оценивает проверочное выражение после обработки тела цикла. 
Таким образом, тело цикла выполняется один раз, даже если проверочное выражение изначально дает false. 
Циклы for и while являются циклами с проверкой на входе, а цикл do while — циклом с проверкой па выходе. 

2. Что напечатает следующий фрагмент кода, если использовать его в программе? 
    int i; 
    for (i = 0; i < 5; i++) 
    cout << i; 
    cout << endl; 
2.
#include <iostream>
int main(void)
{
    using namespace std;
    int i; 
    for (i = 0; i < 5; i++) 
    cout << i; 
    cout << endl;
// Обратите внимание, что cout << endl; не является частью тела цикла (поскольку отсутствуют фигурные скобки). 

    return 0;
}
ответ  01234

3. Что напечатает следующий фрагмент кода, если использовать его в программе? 
int j; 
for (j = 0; j < 11; j += 3) 
cout << j; 
cout << endl << j << endl; 
3.
#include <iostream>
int main(void)
{
    using namespace std;
    int j; 
    for (j = 0; j < 11; j += 3) 
    cout << j; 
    cout << endl << j << endl; 
    return 0;
}
ответ 0369
      12

4. Что напечатает следующий фрагмент кода, если использовать его в программе? 
int j = 5; 
while ( ++j < 9) 
cout << j++ << endl; 

4.  
#include <iostream>
int main(void)
{
    using namespace std;
    int j = 5; 
    while(++j < 9) 
    cout << j++ << endl;
    return 0;
}
ответ 6
      8


5. Что напечатает следующий фрагмент кода, если использовать его в программе? 
int k = 8; 
do 
cout << "к = " << к << endl; 
while (k++ < 5); 

5.
#include <iostream>
int main(void)
{
    using namespace std;
    int k = 8; 
    do 
    cout << "k = " << k << endl; 
    while (k++ < 5);
    return 0;
}
ответ 8;

6. Напишите цикл for, который печатает значения 1 2 4 8 16 32 64, увеличивая вдвое значение переменной счетчика на каждом шаге. 
6.
#include <iostream>
const int Size = 64;
int main(void)
{
    using namespace std;
    int i;
    for(i = 1; i <= Size; i *= 2)
    cout << i << endl;
    return 0;
}

7. Как сделать так, чтобы тело цикла включало более одного оператора? 
7.Операторы заключают в пару фигурных скобок для формирования одного составного оператора, или блока. 

for(;;)
{
    for(;;)
    {
        for(;;)
        {
            while(!=)
        }
    }
}

8. Правилен ли следующий оператор? Если нет, то почему? Если да, то что он делает? 
int х = (1,024); 
А правилен ли такой оператор? 
int у; 
у = 1,024; 

8. 
Да, первый оператор является правильным. Выражение 1,024 состоит из двух выражений, 1 и 024, разделенных операцией запятой. 
Значение является значением выражения справа. Это 024, которое является восьмеричным эквивалентом десятичного 20, поэтому в объявлении переменной х присваивается значение 20. 
Второй оператор также правилен. Однако в соответствии с приоритетом выполнения операций выражение будет оценено следующим образом: 
(У = 1), 024; 
То есть выражение слева устанавливает у в 1, а значением всего выражения, которое не используется, является 024, или 20. 

9. Чем отличается cin >> ch от cin.get(ch) и ch = cin.get() с точки зрения ввода? 
9. Форма сin >> ch пропускает пробелы, символы новой строки и табуляции. Две других формы читают эти символы. 
