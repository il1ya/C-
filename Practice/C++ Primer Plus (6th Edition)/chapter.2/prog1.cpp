1. Как называются модули программ, написанных на языке C++? 
1. Они называются функциями. 

2. Что делает следующая директива препроцессора? 
#include <iostream> 
2. Для использования ввода-вывода cout <<, cin >>
Перед финальной компиляцией вместо этой директивы подставляется содержимое файла ostream. 


3. Что делает следующий оператор? 
using namespace std; 
3. дает возможность использовать в функции cout <<, cin >>
Делает доступными для программы определения, созданные в пространстве имен std. 


4. Какой оператор вы могли бы использовать, чтобы напечатать фразу "Hello, world" и перейти на новую строку? 
4. 
cout « "Hello, world\n"; 
или 
cout << "Hello, world" << endl;

5. Какой оператор вы могли бы использовать для создания переменной целочисленного типа по имени cheeses? 
5. int cheeses;

6. Какой оператор вы могли бы использовать, чтобы присвоить переменной cheeses значение 32? 
6. int cheeses = 32;

7. Какой оператор вы могли бы использовать, чтобы прочитать значение, введенное с клавиатуры, и присвоить его переменной cheeses? 
7.  int cheeses;
    cin >> cheeses;

8. Какой оператор вы могли бы использовать, чтобы напечатать фразу "We have X varieties of cheese", в которой X заменяется текущим значением переменной cheeses?
8.  int cheeses;
    cin >> cheeses;
    cont << "We have " << cheeses << " varieties of cheese" << endl;

9. Что говорят вам о функциях следующие прототипы? 
int froop(double t); прототип функций возврощает значение типа int с аргументом double 
Функция froop() вызывается с одним аргументом, который будет иметь тип double; функция будет возвращать значение типа int. 
Например, ее можно использовать следующим образом: 
int gval = froop (3.14159); 

void rattle(int n); прототип функций  функция без возрата
Функция rattle() не имеет возвращаемого значения и ожидает аргумент типа int. Например, ее можно вызвать так: 
rattle(37); 

int prune(void); прототип функций без аргумента типа int
Функция prune() возвращает int и ожидает использования без аргумента. Например, ее можно вызвать следующим образом: 
int residue = prune(); 


10. В каких случаях не используется ключевое слово return при определении функции? 
10. где не требуется возвращение значения
Ключевое слово return не нужно использовать в функции, если она возвращает тип void. Однако его можно применять, если вы не предоставляете возвращаемого значения: 
return; 


11. Предположим, что функция main() содержит следующую строку: 
cout « "Please enter your PIN: "; 
Также предположим, что компилятор сообщил о том, что cout является неизвестным идентификатором. 
Какова вероятная причина этого сообщения, и как выглядят способы решения проблемы? 
11. Вероятной причиной является отсутствие доступа к заголовочному файлу iostream или к пространству имен std. Удостоверьтесь, что в начале файла присутствуют следующие операторы: 
#include <iostream> 
using namespace std; 



